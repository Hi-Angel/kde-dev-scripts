#!/usr/local/bin/perl

# this script is written by Stephan Kulow <coolo@kde.org> with
# much help from Sirtaj Singh Kang <ssk@physics.unimelb.edu.au>

%files = ();

$topdir=`pwd`;
chomp $topdir;

$lastdir = '';

%messages = 
(
 'warning: implicit declaration of function `int i18n\(\.\.\.\)\'' => "klocale",
 'variable `class QPixmap \S*\' has initializer but incomplete type' => "qpixmap",
 '`kapp\' undeclared \(first use this function\)' => "kapp"
 
);

%changes = ();

while(<>)
{
  if (/make.*Entering directory \`(.+)\'/) {
    $lastdir = $1;
    $lastdir =~ s/^$topdir\///;
    print STDERR "entering $lastdir\n";
    next;
  }
  if (/^(.*):\d*: (.*)$/) {
    $file = "$lastdir/$1";
    $line = $2;
  } else {
    print STDERR $_;
    next;
  }
  
  next if defined($changes{$file});

  print STDERR $_;

  foreach $message (keys %messages) {
    if ($line =~ /$message/) {
      $changes{$file} = $messages{$message};
      fixFile($file, $messages{$message});
    }
  }
  
}

sub fixFile
{
  my( $file, $adding ) = @_;
  
  my $lastinclude = "";

  # read file
  open ( FILE, "$file" ) || die "Can't read $file";
  
  my $flines;
  
  while (<FILE>) {
    $flines .= $_;
    if ($_ =~ m/(#include\s*[\"<]\S*\.h[\">])/) {
       $lastinclude = $1;
    }
  }
  
  close FILE;
  
  my $success;
  
  if ($flines =~ /(\n$lastinclude)/) {
    $flines =~ s/$lastinclude/$lastinclude\n#include <$adding.h>/;
      print STDERR "ADDED to \"$lastinclude\" $adding.h\n";
    $success = 1;
  } else {
    print STDERR "ERROR: can't find includement of $old\.h in $file\n";
    $success = 0;
  }
	    
  return if (!$success);
      
  # write file
      
  rename($file, "$file.old");
  open( FILE, ">$file" ) || die "Can't write to $file";
  print FILE $flines;    
  close FILE;
}
